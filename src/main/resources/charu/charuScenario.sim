//----------------------------------------------
//Configuration
//----------------------------------------------


//----------------------------------------------

logger.info("Running the Random simulation")

var importIt = new JavaImporter(java.lang.String,java.util,java.io,java.time,com.stream.simulation,com.stream.fraud.model);  
with (importIt) {  
  var simulator = new Simulator();

// Expectation from PMML
//[InputField{name=amount, fieldName=amount, displayName=null, dataType=float, opType=continuous}, InputField{name=category, fieldName=category, displayName=null, dataType=float, opType=continuous}, InputField{name=merchant, fieldName=merchant, displayName=null, dataType=float, opType=continuous}, InputField{name=gender, fieldName=gender, displayName=null, dataType=float, opType=continuous}, InputField{name=step, fieldName=step, displayName=null, dataType=float, opType=continuous}, InputField{name=customer, fieldName=customer, displayName=null, dataType=float, opType=continuous}, InputField{name=age, fieldName=age, displayName=null, dataType=float, opType=continuous}]

  var state = simulator.defineState("SingleState")
  	.addResource("id", "account")
  	.addSubject("category", "1")
  	.addSubject("merchant", "1")
  	.addSubject("gender", "2")
  	.addSubject("step", "1")
  	.addSubject("customer", "1")
  	.addSubject("age", "1")
  	.addSubject("amount", "100")
	.addAction("id", "atmWithdrawal");

  var markovChain = [
  	new StateTransition("SingleState", "SingleState", 1 , 1000)
  ];

  var resourceTemplate = new Resource();
  resourceTemplate.setAttribute("accountId","123");
  resourceTemplate.setAttribute("simulation","random");
  var resourcePool = simulator.definePool(1, resourceTemplate);
  var subjectTemplate = new Subject();
  subjectTemplate.setAttribute("id","123");
  subjectTemplate.setAttribute("simulation","random");
  var subjectPool = simulator.definePool(1, subjectTemplate);
  var subjectResourcePool = simulator.pair(resourcePool,subjectPool);
  simulator.defineActor("123").stateTransition("SingleState", markovChain);

  simulator.startActors("123", subjectResourcePool, 100, 100);
  simulator.sleepInMilliSecs(300000);
  simulator.pauseAndPrompt("End the simulation?");
  simulator.end()
}  
result=simulator;
logger.info("Done - simulation script")

